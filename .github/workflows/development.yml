name: CI

on:
  push:
    branches: ['dev']
  pull_request:
    branches: ['dev']

env:
  DOCKER_IMAGE: ghcr.io/${{ github.actor }}/nest
  VERSION: ${{ github.sha }}
  NAME: go_cicd
  AWSACCESSKEYID: ${{ secrets.AWSACCESSKEYID }}
  AWSSECRETACCESSKEY: ${{ secrets.AWSSECRETACCESSKEY }}
  AWSREGION: ${{ secrets.AWSREGION }}
  S3BUCKETNAME: ${{ secrets.S3BUCKETNAME }}
  KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
  KAKAO_TEST_CLIENT_ID: ${{ secrets.KAKAO_TEST_CLIENT_ID }}
  KAKAO_TEST_CLIENT_SECRET: ${{ secrets.KAKAO_TEST_CLIENT_SECRET }}
  NAVER_CLIENT_ID: ${{ secrets.NAVER_CLIENT_ID }}
  NAVER_CLIENT_SECRET: ${{ secrets.NAVER_CLIENT_SECRET }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v2

      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Docker build
        run: |
          docker build --build-arg AWSACCESSKEYID="${{ env.AWSACCESSKEYID }}" \
          --build-arg AWSSECRETACCESSKEY="${{ env.AWSSECRETACCESSKEY }}" \
          --build-arg AWSREGION="${{ env.AWSREGION }}" \
          --build-arg S3BUCKETNAME="${{ env.S3BUCKETNAME }}" \
          --build-arg KAKAO_CLIENT_ID="${{ env.KAKAO_CLIENT_ID }}" \
          --build-arg KAKAO_TEST_CLIENT_ID="${{ env.KAKAO_TEST_CLIENT_ID }}" \
          --build-arg KAKAO_TEST_CLIENT_SECRET="${{ env.KAKAO_TEST_CLIENT_SECRET }}" \
          --build-arg NAVER_CLIENT_ID="${{ env.NAVER_CLIENT_ID }}" \
          --build-arg NAVER_CLIENT_SECRET="${{ env.NAVER_CLIENT_SECRET }}" \
          -t ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }} .

      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}
  deploy:
    needs: build
    name: Deploy
    runs-on: [self-hosted, label-go]
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Docker run
        run: |
          docker network create connect-net || true
          docker stop nest || true && docker rm nest || true
          docker rmi ${{ env.DOCKER_IMAGE }}:latest || true
          docker run -itd -p 9898:9898 --network connect-net \
            -e REDIS_HOST=ljh-redis \
            -e REDIS_PORT=6379 \
            -e AWSACCESSKEYID="${{ secrets.AWSACCESSKEYID }}" \
            -e AWSSECRETACCESSKEY="${{ secrets.AWSSECRETACCESSKEY }}" \
            -e AWSREGION="${{ secrets.AWSREGION }}" \
            -e S3BUCKETNAME="${{ secrets.S3BUCKETNAME }}" \
            -e KAKAO_CLIENT_ID="${{ secrets.KAKAO_CLIENT_ID }}" \
            -e KAKAO_TEST_CLIENT_ID="${{ secrets.KAKAO_TEST_CLIENT_ID }}" \
            -e KAKAO_TEST_CLIENT_SECRET="${{ secrets.KAKAO_TEST_CLIENT_SECRET }}" \
            -e NAVER_CLIENT_ID="{{ secrets.NAVER_CLIENT_ID }}"\
            -e NAVER_CLIENT_SECRET="{{ secrets.NAVER_CLIENT_SECRET }}"\
            --name nest --restart always ${{ env.DOCKER_IMAGE }}:latest